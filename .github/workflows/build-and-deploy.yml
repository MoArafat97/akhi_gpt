name: Build and Deploy

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  FLUTTER_VERSION: '3.24.0'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true
    
    - name: Get dependencies
      run: flutter pub get
      working-directory: ./akhi_gpt
    
    - name: Run analyzer
      run: flutter analyze
      working-directory: ./akhi_gpt
    
    - name: Run tests
      run: flutter test
      working-directory: ./akhi_gpt

  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true
    
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
    
    - name: Get dependencies
      run: flutter pub get
      working-directory: ./akhi_gpt
    
    - name: Create .env file with secrets
      run: |
        cat > akhi_gpt/.env << EOF
        # OpenRouter API Configuration
        OPENROUTER_API_KEY=${{ secrets.OPENROUTER_API_KEY }}
        DEFAULT_MODEL=${{ secrets.DEFAULT_MODEL }}
        
        # Fallback Models (comma-separated, in priority order)
        FALLBACK_MODELS=${{ secrets.FALLBACK_MODELS }}
        
        # Proxy Configuration
        PROXY_ENDPOINT=${{ secrets.PROXY_ENDPOINT }}
        ENABLE_PROXY=${{ secrets.ENABLE_PROXY }}
        
        # Rate Limiting Configuration
        RATE_LIMIT_REQUESTS_PER_MINUTE=${{ secrets.RATE_LIMIT_REQUESTS_PER_MINUTE }}
        RATE_LIMIT_BURST_SIZE=${{ secrets.RATE_LIMIT_BURST_SIZE }}
        THROTTLE_DELAY_MS=${{ secrets.THROTTLE_DELAY_MS }}
        
        # Caching Configuration
        CACHE_TTL_SECONDS=${{ secrets.CACHE_TTL_SECONDS }}
        CACHE_MAX_ENTRIES=${{ secrets.CACHE_MAX_ENTRIES }}
        ENABLE_PROMPT_DEDUPLICATION=${{ secrets.ENABLE_PROMPT_DEDUPLICATION }}
        DEDUPLICATION_WINDOW_MS=${{ secrets.DEDUPLICATION_WINDOW_MS }}
        
        # Request Optimization
        ENABLE_REQUEST_QUEUEING=${{ secrets.ENABLE_REQUEST_QUEUEING }}
        MAX_CONCURRENT_REQUESTS=${{ secrets.MAX_CONCURRENT_REQUESTS }}
        REQUEST_TIMEOUT_MS=${{ secrets.REQUEST_TIMEOUT_MS }}
        
        # RevenueCat Configuration
        REVENUECAT_API_KEY_ANDROID=${{ secrets.REVENUECAT_API_KEY_ANDROID }}
        REVENUECAT_API_KEY_IOS=${{ secrets.REVENUECAT_API_KEY_IOS }}
        REVENUECAT_ENTITLEMENT_ID=${{ secrets.REVENUECAT_ENTITLEMENT_ID }}
        EOF
    
    - name: Decode keystore
      run: |
        echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > akhi_gpt/android/app/keystore.jks
    
    - name: Create key.properties
      run: |
        cat > akhi_gpt/android/key.properties << EOF
        storePassword=${{ secrets.KEYSTORE_PASSWORD }}
        keyPassword=${{ secrets.KEY_PASSWORD }}
        keyAlias=${{ secrets.KEY_ALIAS }}
        storeFile=keystore.jks
        EOF
    
    - name: Build APK
      run: flutter build apk --release --obfuscate --split-debug-info=build/debug-info
      working-directory: ./akhi_gpt
    
    - name: Build App Bundle
      run: flutter build appbundle --release --obfuscate --split-debug-info=build/debug-info
      working-directory: ./akhi_gpt
    
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: akhi_gpt/build/app/outputs/flutter-apk/app-release.apk
    
    - name: Upload App Bundle artifact
      uses: actions/upload-artifact@v4
      with:
        name: android-aab
        path: akhi_gpt/build/app/outputs/bundle/release/app-release.aab

  build-ios:
    name: Build iOS
    runs-on: macos-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true
    
    - name: Get dependencies
      run: flutter pub get
      working-directory: ./akhi_gpt
    
    - name: Create .env file with secrets
      run: |
        cat > akhi_gpt/.env << EOF
        # OpenRouter API Configuration
        OPENROUTER_API_KEY=${{ secrets.OPENROUTER_API_KEY }}
        DEFAULT_MODEL=${{ secrets.DEFAULT_MODEL }}
        
        # Fallback Models (comma-separated, in priority order)
        FALLBACK_MODELS=${{ secrets.FALLBACK_MODELS }}
        
        # Proxy Configuration
        PROXY_ENDPOINT=${{ secrets.PROXY_ENDPOINT }}
        ENABLE_PROXY=${{ secrets.ENABLE_PROXY }}
        
        # Rate Limiting Configuration
        RATE_LIMIT_REQUESTS_PER_MINUTE=${{ secrets.RATE_LIMIT_REQUESTS_PER_MINUTE }}
        RATE_LIMIT_BURST_SIZE=${{ secrets.RATE_LIMIT_BURST_SIZE }}
        THROTTLE_DELAY_MS=${{ secrets.THROTTLE_DELAY_MS }}
        
        # Caching Configuration
        CACHE_TTL_SECONDS=${{ secrets.CACHE_TTL_SECONDS }}
        CACHE_MAX_ENTRIES=${{ secrets.CACHE_MAX_ENTRIES }}
        ENABLE_PROMPT_DEDUPLICATION=${{ secrets.ENABLE_PROMPT_DEDUPLICATION }}
        DEDUPLICATION_WINDOW_MS=${{ secrets.DEDUPLICATION_WINDOW_MS }}
        
        # Request Optimization
        ENABLE_REQUEST_QUEUEING=${{ secrets.ENABLE_REQUEST_QUEUEING }}
        MAX_CONCURRENT_REQUESTS=${{ secrets.MAX_CONCURRENT_REQUESTS }}
        REQUEST_TIMEOUT_MS=${{ secrets.REQUEST_TIMEOUT_MS }}
        
        # RevenueCat Configuration
        REVENUECAT_API_KEY_ANDROID=${{ secrets.REVENUECAT_API_KEY_ANDROID }}
        REVENUECAT_API_KEY_IOS=${{ secrets.REVENUECAT_API_KEY_IOS }}
        REVENUECAT_ENTITLEMENT_ID=${{ secrets.REVENUECAT_ENTITLEMENT_ID }}
        EOF
    
    - name: Build iOS (no signing)
      run: flutter build ios --release --no-codesign --obfuscate --split-debug-info=build/debug-info
      working-directory: ./akhi_gpt
    
    - name: Upload iOS build artifact
      uses: actions/upload-artifact@v4
      with:
        name: ios-build
        path: akhi_gpt/build/ios/iphoneos/Runner.app

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security scan
      run: |
        # Check for hardcoded secrets
        if grep -r "sk-or-v1-" akhi_gpt/lib/ --exclude-dir=.git; then
          echo "❌ Found hardcoded API keys in source code"
          exit 1
        fi
        
        if grep -r "your-.*-api-key-here" akhi_gpt/lib/ --exclude-dir=.git; then
          echo "❌ Found placeholder API keys in source code"
          exit 1
        fi
        
        echo "✅ No hardcoded secrets found in source code"
    
    - name: Check .env file security
      run: |
        if [ -f "akhi_gpt/.env" ]; then
          echo "⚠️ .env file found in repository - this should not be committed"
          exit 1
        fi
        echo "✅ No .env file in repository"
